version: '3.8'
services:
  ############################################
  ######Admin UI Service######################
  ############################################
  admin-ui:
    build: ./ui/admin-ui
    container_name: admin-ui
    ports:
      - "5000:3500"
    environment:
      - DAPR_HTTP_PORT=3501
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  admin-ui-dapr:
    image: "daprio/daprd:edge"
    container_name: admin-ui-dapr
    command: ["./daprd",
        "-app-port", "5000",
        "-app-id", "admin-ui",
        "-app-protocol", "http",
        "-dapr-http-port", "3500",
        "-components-path", "/dapr/components",
        "-config", "/dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - admin-ui
      - rabbitmq
    network_mode: "service:admin-ui"

  ############################################
  ######News Manager Service##################
  ############################################
  news-manager:
    build: ./managers/news-manager
    container_name: news-manager
    ports:
      - "5001:3501"
      # - "5009:5672"
    environment:
      - DAPR_HTTP_PORT=3502
      # - DAPR_RABBITMQ_PORT=5672
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure 
      
  
  news-manager-dapr:
    image: "daprio/daprd:edge"
    container_name: news-manager-dapr
    command: ["./daprd",
        "-app-port", "5001",
        "-app-id", "news-manager",
        "-app-protocol", "http",
        "-dapr-http-port", "3501",
        "-components-path", "/dapr/components",
        "-config", "/dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on: 
      - rabbitmq
      - news-manager
    network_mode: "service:news-manager"

  ############################################
  ######News Service##########################
  ############################################
  news-service:
    build: ./accessors/news-service
    container_name: news-service
    ports:
      - "5002:3502"
      # - "5010:5672"
    environment:
      - DAPR_HTTP_PORT=3501
    env_file:
      - .env
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure   
  
  news-service-dapr:
    image: "daprio/daprd:edge"
    container_name: news-service-dapr
    command: ["./daprd",
        "-app-port", "5002",
        "-app-id", "news-service",
        "-app-protocol", "http",
        "-dapr-http-port", "3502",
        "-components-path", "/dapr/components",
        "-config", "/dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - rabbitmq
      - news-service
        
    network_mode: "service:news-service"

  ################################################
  ######Customer UI Service#######################
  ################################################
  customer-ui:
    build: ./ui/customer-ui
    container_name: customer-ui
    ports:
      - "5003:3503"
    environment:
      - DAPR_HTTP_PORT=3504
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  customer-ui-dapr:
    image: "daprio/daprd:edge"
    container_name: customer-ui-dapr
    command: ["./daprd",
        "-app-port", "5003",
        "-app-id", "customer-ui",
        "-app-protocol", "http",
        "-dapr-http-port", "3503",
        "-components-path", "/dapr/components",
        "-config", "/dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - customer-ui
      - rabbitmq
    network_mode: "service:customer-ui"

  ################################################
  ######Customer Service##########################
  ################################################
  customer-service:
    build: ./customer/customer-service
    container_name: customer-service
    ports:
      - "5004:3504"
    environment:
      - DAPR_HTTP_PORT=3505
      - DAPR_HTTP_PORT2=3507
    env_file:
      - .env
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  customer-service-dapr:
    image: "daprio/daprd:edge"
    container_name: customer-service-dapr
    command: ["./daprd",
        "-app-port", "5004",
        "-app-id", "customer-service",
        "-app-protocol", "http",
        "-dapr-http-port", "3504",
        "-components-path", "/dapr/components",
        "-config", "/dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - customer-service
      - rabbitmq
    network_mode: "service:customer-service"

  ################################################
  ######User Manager Service#####################
  ################################################
  user-manager:
    build: ./managers/user-manager
    container_name: user-manager
    ports:
      - "5005:3505"
    environment:
      - DAPR_HTTP_PORT=3506
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  user-manager-dapr:
    image: "daprio/daprd:edge"
    container_name: user-manager-dapr
    command: ["./daprd",
        "-app-port", "5005",
        "-app-id", "user-manager",
        "-app-protocol", "http",
        "-dapr-http-port", "3505",
        "-components-path", "/dapr/components",
        "-config", "/dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - user-manager
      - rabbitmq
    network_mode: "service:user-manager"

  ################################################
  ######User Service##############################
  ################################################
  user-service:
    build: ./accessors/user-service
    container_name: user-service
    ports:
      - "5006:3506"
    environment:
      - DAPR_HTTP_PORT=3507
    env_file:
      - .env
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  user-service-dapr:
    image: "daprio/daprd:edge"
    container_name: user-service-dapr
    command: ["./daprd",
        "-app-port", "5006",
        "-app-id", "user-service",
        "-app-protocol", "http",
        "-dapr-http-port", "3506",
        "-components-path", "/dapr/components",
        "-config", "/dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - user-service
      - rabbitmq
    network_mode: "service:user-service"

  ################################################
  ######Notification Manager Service#############
  ################################################
  notification-manager:
    build: ./managers/notification-manager
    container_name: notification-manager
    ports:
      - "5007:3507"
    environment:
      - DAPR_HTTP_PORT=3508
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy
  notification-manager-dapr:
    image: "daprio/daprd:edge"
    container_name: notification-manager-dapr
    command: ["./daprd",
        "-app-port", "5007",
        "-app-id", "notification-manager",
        "-app-protocol", "http",
        "-dapr-http-port", "3507",
        "-components-path", "/dapr/components",
        "-config", "/dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - notification-manager
      - rabbitmq
    network_mode: "service:notification-manager"
  
  ################################################
  ######Notification Service######################
  ################################################
  notification-service:
    build: ./accessors/notification-service
    container_name: notification-service
    ports:
      - "5008:3508"
    environment:
      - DAPR_HTTP_PORT=3507
    env_file:
      - .env
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy
  notification-service-dapr:
    image: "daprio/daprd:edge"
    container_name: notification-service-dapr
    command: ["./daprd",
        "-app-port", "5008",
        "-app-id", "notification-service",
        "-app-protocol", "http",
        "-dapr-http-port", "3508",
        "-components-path", "/dapr/components",
        "-config", "/dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - notification-service
      - rabbitmq
    network_mode: "service:notification-service"
  
  ################################################
  ######Email Service############################
  ################################################
  email:
    build: ./communication-channels/email
    container_name: email
    env_file:
      - .env
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy 
    restart: on-failure   

  ################################################
  ######MongoDB Service###########################
  ################################################
  mongo:
    image: "mongo:4.4"
    volumes:
      - "./mongo-data:/data/db"
    env_file:
      - .env
    networks:
      - my-network

  ###########################################
  ######RabbitMQ Service#####################
  ###########################################
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672" # Management interface
      - "5672:5672"   # RabbitMQ service
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  
networks:
  my-network:
    driver: bridge
